{"version":3,"sources":["components/Search.js","components/AddHero.js","components/HeroInfo.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Search","query","onQueryChange","sortBy","onSortByChange","orderBy","onOrderByChange","useState","anchorEl","setAnchorEl","Grid","container","style","width","item","xs","sm","FormControl","InputLabel","htmlFor","className","Input","type","startAdornment","InputAdornment","position","color","name","id","value","onChange","event","target","placeholder","IconButton","onClick","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","makeStyles","theme","paper","backgroundColor","border","boxShadow","shadows","padding","spacing","top","left","transform","useStyles","maxHeight","overflowX","heading","fontFamily","HeroInfo","hero","classes","onDeleteHero","setOpen","body","Container","justifyContent","Typography","variant","threatLevel","src","imgURL","abilities","gutterBottom","notes","m","Card","CardMedia","component","height","image","title","Modal","HideOnScroll","props","children","window","trigger","useScrollTrigger","undefined","Slide","appear","direction","in","Navbar","AppBar","Toolbar","class","alt","Link","href","fontSize","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","heroList","setHeroList","setQuery","setSortBy","setOrderBy","filteredHeroes","filter","toLowerCase","includes","alias","sort","a","b","order","fetchData","useCallback","fetch","then","response","json","data","useEffect","ThemeProvider","alignItems","marginTop","myQuery","mySort","map","key","heroId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.093999bd.chunk.js","sourcesContent":["import { BiSearch, BiCaretDown, BiCheck } from \"react-icons/bi\";\r\nimport { useState } from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nconst Search = ({ query, onQueryChange, sortBy, onSortByChange, orderBy, onOrderByChange }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n    return (\r\n      <>\r\n        <Grid container>\r\n          <Grid style={{width:\"100%\"}} item xs={9} sm={9} >\r\n            <FormControl>\r\n                \r\n                <InputLabel htmlFor=\"query\" className=\"sr-only\">Search</InputLabel>\r\n                <Input type=\"text\" \r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <BiSearch style={{color: 'whitesmoke'}}/>\r\n                      </InputAdornment>\r\n                    }\r\n                    name=\"query\" \r\n                    id=\"query\" \r\n                    value={query} \r\n                    color=\"secondary\"\r\n                    onChange={(event) => {onQueryChange(event.target.value)}}\r\n                    placeholder=\"Search\" />\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <div>\r\n              <div>\r\n                <IconButton onClick={handleClick}>\r\n                  <SortIcon color=\"secondary\"/>\r\n                </IconButton>\r\n                \r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n        <MenuItem onClick={() => onSortByChange('name')}>Name {(sortBy === 'name') && <BiCheck />}</MenuItem>\r\n        <MenuItem onClick={() => onSortByChange('alias')}>Alias {(sortBy === 'alias') && <BiCheck />}</MenuItem>\r\n        <MenuItem onClick={() => onSortByChange('birthDate')}>Birth Date {(sortBy === 'date') && <BiCheck />}</MenuItem>\r\n        <MenuItem onClick={() => onOrderByChange('asc')}>Asc {(orderBy === 'asc') && <BiCheck />}</MenuItem>\r\n        <MenuItem onClick={() => onOrderByChange('desc')}>Desc {(orderBy === 'desc') && <BiCheck />}</MenuItem>\r\n      </Menu>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Search;","import { BiCalendarPlus } from \"react-icons/bi\";\r\nimport { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    backgroundColor: \"#141414\",\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: `50%`,\r\n    left: `50%`,\r\n    transform: `translate(-50%, -50%)`,\r\n  },\r\n}));\r\n\r\n\r\nconst AddHero = ({ onSendHero, lastId }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n    const clearData = {\r\n      name: '',\r\n      alias: '',\r\n      birthDate: '',\r\n      notes: ''\r\n    };\r\n\r\n    let [toggleForm, setToggleForm] = useState(false);\r\n    let [formData, setFormData] = useState(clearData);\r\n\r\n    function formDataPublish() {\r\n      const heroInfo = {\r\n        id: lastId + 1,\r\n        name: formData.name,\r\n        alias: formData.alias,\r\n        birthDate: formData.birthDate,\r\n        dateRegistered: Date.toLocaleString(),\r\n        notes: formData.notes\r\n      }\r\n      onSendHero(heroInfo);\r\n      setFormData(clearData);\r\n      setToggleForm(!toggleForm);\r\n    };\r\n\r\n    const body = (\r\n      <div  className={classes.paper}>\r\n        <form className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\r\n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n              <TextField label=\"Name\" type=\"text\" id=\"name\"\r\n                    onChange={(event) => {setFormData({...formData, name: event.target.value})}}\r\n                    value={formData.name}/>\r\n            </div>\r\n    \r\n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n              <TextField label=\"Alias\" type=\"text\" id=\"alias\"\r\n                    onChange={(event) => {setFormData({...formData, alias: event.target.value})}}\r\n                    value={formData.alias}/>\r\n            </div>\r\n            <pre>\r\n\r\n\r\n            </pre>\r\n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                <InputLabel htmlFor=\"birthDate\" className=\"sr-only\">Birth Date</InputLabel>\r\n                <Input type=\"date\" \r\n                    onChange={(event) => {setFormData({...formData, birthDate: event.target.value})}}\r\n                    value={formData.birthDate}\r\n                    name=\"birthDate\" \r\n                    id=\"birthDate\" \r\n                    color=\"secondary\"/>\r\n            </div>\r\n  \r\n    \r\n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"Notes\"\r\n              multiline\r\n              maxRows={4}\r\n              onChange={(event) => {setFormData({...formData, notes: event.target.value})}}\r\n              value={formData.notes}\r\n            />\r\n            </div>\r\n\r\n            <pre>\r\n\r\n\r\n            </pre>\r\n    \r\n            <div className=\"pt-5\">\r\n              <div className=\"flex justify-end\">\r\n                <Button variant=\"outlined\" color=\"secondary\" type=\"submit\" onClick={formDataPublish} className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-400 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        \r\n      </div>\r\n    );\r\n    \r\n    return (\r\n        <div>\r\n          <Button variant=\"outlined\" color=\"secondary\"  className={`bg-blue-400 text-white px-2 py-3 w-full text-left rounded-t-md ${toggleForm ? 'rounded-t-md' : 'rounded-md'}`}>\r\n            <div><BiCalendarPlus className=\"inline-block align-text-top\" /> Add New</div>\r\n          </Button>\r\n        \r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            {body}\r\n          </Modal>\r\n       \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default AddHero;","import Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { BiTrash } from 'react-icons/bi';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: \"70%\",\r\n      border: \"none\",\r\n      boxShadow: theme.shadows[5],\r\n      maxHeight: \"600px\",\r\n      overflowX: \"hidden\",\r\n      padding: theme.spacing(2, 4, 3),\r\n      top: `50%`,\r\n      left: `50%`,\r\n      transform: `translate(-50%, -50%)`,\r\n      color: 'white'\r\n    },\r\n\r\n    heading: {\r\n        fontFamily: \"Chakra Petch\"\r\n    }\r\n  }));\r\n  \r\n\r\nconst HeroInfo = ({ hero, onDeleteHero }) => {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const body = (\r\n        <div  className={classes.paper}>\r\n            <Container className=\"threatInfo\">\r\n                <Grid container justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\" className={classes.heading}>\r\n                            {hero.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\">\r\n                            Threat Level: {hero.threatLevel}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <img src={hero.imgURL} width=\"150\"></img>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\">\r\n                            Abilities: {hero.abilities}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"body1\" gutterBottom>\r\n                           {hero.notes}\r\n                        </Typography>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n      );\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={12} m={6} sm={3}>\r\n                \r\n                <Card className=\"card small\" onClick={handleOpen}>\r\n                \r\n\r\n                    <CardMedia\r\n                    component=\"img\"\r\n                    height=\"500\"\r\n                    image={hero.imgURL}\r\n                    title=\"Hunter B-15\"\r\n                    />\r\n\r\n                    <div className=\"cardText\"></div>\r\n\r\n                    <div className=\"textPanel\" > \r\n                        <h2>{hero.name}</h2>\r\n                    </div>\r\n                    \r\n                </Card>\r\n                {/* <button type=\"button\" onClick={ () => onDeleteHero(hero.id)}\r\n                className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-red-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n                    <BiTrash />\r\n                </button> */}\r\n            </Grid>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeroInfo","import react from 'react'; \r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst HideOnScroll = (props) => {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n  \r\n    return (\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        {children}\r\n      </Slide>\r\n    );\r\n  }\r\n\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n\r\n        <>\r\n            {/* <CssBaseline /> */}\r\n            <HideOnScroll {...props}>\r\n            <AppBar>\r\n                <Toolbar>\r\n                <div class=\"logo\">\r\n                    <img src=\"images/sword_logo.png\" alt=\"SWORD LOGO\" width=\"60\"/>   \r\n                </div>\r\n                <pre>  </pre>\r\n                <nav className=\"nav-col\">\r\n                    <div className=\"nav-wrapper\">\r\n                        <Link href=\"#!\" style={{color: 'white', fontFamily: 'Chakra Petch', fontSize: '22px'}}>S.W.O.R.D. Watchlist</Link>\r\n                        {/* <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a> */}\r\n                    </div>\r\n                </nav>\r\n                </Toolbar>\r\n            </AppBar>\r\n            </HideOnScroll>\r\n            <Toolbar />    \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import './App.css';\nimport { useState, useEffect, useCallback } from 'react';\nimport { makeStyles, useTheme, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Search from \"./components/Search\";\nimport AddHero from \"./components/AddHero\";\nimport Grid from '@material-ui/core/Grid';\nimport HeroInfo from \"./components/HeroInfo\";\nimport Navbar from \"./components/Navbar\";\nimport Container from '@material-ui/core/Container';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#0B0B0B',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#2196f3',\n      dark: '#006596',\n      contrastText: '#000',\n    },\n  },\n});\n\nconst App = () => {\n  let [heroList, setHeroList] = useState([]);\n  let [query, setQuery] = useState(\"\");\n  let [sortBy, setSortBy] = useState(\"name\");\n  let [orderBy, setOrderBy] = useState(\"asc\");\n\n  const filteredHeroes = heroList.filter(\n    item => {\n      return (\n        item.name.toLowerCase().includes(query.toLowerCase()) || \n        item.alias.toLowerCase().includes(query.toLowerCase()) || \n        item.notes.toLowerCase().includes(query.toLowerCase()) \n      )\n    }\n  ).sort((a, b) => {\n    let order = (orderBy === 'asc') ? 1 : -1;\n    return (\n      a[sortBy].toLowerCase() < b[sortBy].toLowerCase() ? -1 * order : 1 * order\n    )\n  })\n\n  const fetchData = useCallback(() => {\n    fetch('./data.json')\n    .then(response => response.json())\n    .then(data => {\n      setHeroList(data)\n    });\n  }, [])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData]);\n\n  return (\n    <div className=\"App\">\n       <ThemeProvider theme={theme} >\n          <Container>\n\n            <header>\n              <Navbar />\n            </header>\n          \n            <Grid container spacing={8} justifyContent=\"space-between\" alignItems=\"center\" style={{marginTop:\"16px\"}}>\n                <Grid item>\n                  <div>\n\n                  </div>\n\n                    {/* <AddHero \n                      onSendHero={myHero => setHeroList([...heroList, myHero])}\n                      lastId={heroList.reduce((max, item) => Number(item.id) > max ? Number(item.id) : max, 0)}/> */}\n                    \n                </Grid>\n                <Grid item>\n                  <Search \n                    query={query} \n                    onQueryChange={myQuery => setQuery(myQuery)} \n                    orderBy={orderBy} \n                    onOrderByChange={mySort => setOrderBy(mySort)}\n                    sortBy={sortBy}\n                    onSortByChange={mySort => setSortBy(mySort)}/>\n                </Grid>\n            </Grid>\n\n            \n\n            <Grid container>\n              {filteredHeroes.map((hero, key) => (\n                <HeroInfo key={hero.id} hero={hero} \n                onDeleteHero={ heroId => setHeroList(heroList.filter(hero => hero.id !== heroId))}/>\n              ))} \n            </Grid>\n        </Container>\n\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}